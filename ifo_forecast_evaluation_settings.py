# --------------------------------------------------------------------------------------------------
# ==================================================================================================
# Title:        ifo Forecast Evaluation Settings File
#
# Description:  Settings file for the ifo Forecast Evaluation project. This file contains all 
#               settings, for the evaluation code and is called in all subprocesses.
#            
# ==================================================================================================
# --------------------------------------------------------------------------------------------------




# ==================================================================================================
#                          SYSTEM SETTINGS: Which Scripts should be run?
# ==================================================================================================
"""
This code is compartementalized, which means that every module can in principle be run autonomously.
This might make sense to save some time on execution, but be weary that the input data generated by 
previous iterations of earlier modules is what you want to analyze
"""

# 1.:  Decide whether or not to run automatic package installation
install_packages = False  # True or False

# 2.: Decide whther you want to re-run the data processing
run_data_processing = True  # True or False

# 3.: Decide whether to re-run the Naive Forecaster
run_naive_forecaster = True  # True or False

# 4.: Decide whether to run the quarterly evaluation output module
run_quarterly_evaluation = True  # True or False

# 5.: Decide whether to run the ifoCAST evaluation module
run_ifoCAST_evaluation = True  # True or False


## Decide whether to overwrite previous output (always overwriten if same functionality is executed)
clear_result_folders = True   # True or False

# ==================================================================================================
#                                         DATA SETTINGS
# ==================================================================================================

# Decide wether to use Real time (True) or a local version of the Bundesbank data (False)
api_pull = True # True or False; only set False if no internet connection



# ==================================================================================================
#                                     EVALUATION SETTINGS
# ==================================================================================================

# Features to be developed:
"""
- Option what to include in iteratively genereated result graphs
"""

# Decide wether to extend the available real-time data by using the earliest available data release 
# Q2-1995 and imputing it backwards to Q1-1989 (True)
extend_rt_data_backwards = True # True or False



# Define which quarter of which year should be the earliest data point, available from Q1-1970 onwards
evaluation_limit_year = 1970            # from 1970 onwards; set as integer
evaluation_limit_quarter = 1            # 1,2,3 or 4; set as integer

# Define the horizon of first releases which should be evaluated: available from 1995-Q3 onwards
first_release_limit_year = 1970            # from 1970 onwards; set as integer
first_release_limit_quarter = 1            # 1,2,3 or 4; set as integer

"""
NOTE: Coosing a quarter other than 1 omits the entire year for YoY calculations
"""

# Define whether to match the dates of available ifo QoQ Forecasts for the naive forecaster
match_ifo_naive_dates = True  # True or False







# ==================================================================================================
#                                   NAIVE FORECAST SETTINGS
# ==================================================================================================


# --------------------------------------------------------------------------------------------------
#                                       Define the model
# --------------------------------------------------------------------------------------------------

# Set the agent's forecasting method; options: 'AR', 'AVERAGE', 'SMA'
models = ['AR', 'AVERAGE', 'SMA']

# For AR model: set number of lags (sugested: 2); list of int
AR_orders = [2]

# For AR model: set the memory of the agent (timeframe the model is estimated on); list of int or 'FULL'
AR_horizons = [50]
"""
Note:
-> unstable estimates for 2020_Q3 (release date, last observation 2020_Q2) for below 48
-> this parameter does not conduct a degree of freedom correction, i.e. there are AR_horizon - AR_order 
   free observations available.
"""

# For average-based models: set time frame over which the agent averages in quarters; list of int or 'FULL'
average_horizons = [2]


# Set how far the agent predicts into the future; int, NO LIST ITERATION
forecast_horizon = 9

# Note on forecast_horizon:
"""
For a data release at Time T, GDP data is available up to T-1. Accordingly, forecasting t 
periods into the future requires t+1 forecasts, including the so-called nowcast for the 
present. 
When setting the above parameter, this nowcast should not be counted. Set how many FUTURE periods 
are estimated. 
-> Setting forecast_horizon = t thus outputs t+1 prediction values.
"""


# --------------------------------------------------------------------------------------------------
#                                      Format the output
# --------------------------------------------------------------------------------------------------

# For the Naive Forecaster, customize the results folder name; 
# set 'Default' for default: 'Results_model_memory_forecast'
resultfolder_name_n_forecast = 'Default'   

# Define whether column names follow the publishing date or the last available data point 
naming_convention = 'data'  # 'published' or 'data'

# Note for debugging purposes: 
"""
-> column names of any internal dataframes are always derived from the publishing date, setting them
   to the date of latest data availability is done only in the last processing steps.
-> to make the code easier to follow, this is done quick and dirty by just shifting the col datetime
   back by one quarter. This fits all historical records, but if the Bundesbank ever puts out 
   realtime data or misses publishing the previous quarter, this will lead to an error and needs to 
   be fixed.
"""



